#+title: Picom Config
#+AUTHOR: Virgil Surin
#+PROPERTY: header-args :tangle ~/.config/picom/picom.conf
#+auto_tangle: t
#+STARTUP: showeverything

#+begin_src conf

backend = "glx";

active-opacity = 1.0;
inactive-opacity = 1.0;
corner-radius = 10.0;
round-borders = 1;
rounded-corners-exclude = [
  "class_g = 'awesome'",
  "class_g = 'URxvt'",
  "class_g = 'XTerm'",
  "class_g = 'Polybar'",
  "class_g = 'code-oss'",
  "class_g = 'Thunderbird'",
  "class_g = 'Rofi'"
];


fading = false;
fade-delta = 10;
fade-exclude = [ "class_g = 'slop'" ];
fade-in-step = 0.030000;
fade-out-step = 0.030000;

opacity-rule = [ "80:class_g     = 'Bar'" , "100:class_g    = 'slop'" , "100:class_g    = 'XTerm'" , "100:class_g    = 'URxvt'" , "100:class_g    = 'kitty'" , "100:class_g    = 'Alacritty'" , "80:class_g     = 'Polybar'" , "100:class_g    = 'code-oss'" , "100:class_g    = 'Meld'" , "70:class_g     = 'TelegramDesktop'" , "90:class_g     = 'Joplin'" , "100:class_g    = 'firefox'" , "100:class_g    = 'Thunderbird'" ];

blur = {
  method = "dual_kawase";  # Available: none, gaussian, box, kernel, dual_kawase
  size = 10;               # Blur kernel size (for gaussian/box methods)
  deviation = 5.0;         # Standard deviation for gaussian blur
  strength = 5;            # Strength for dual_kawase method (0-20)
}
    animations = (
        {
            triggers = ["close"];
            opacity = {
                curve = "cubic-bezier(0,1,1,1)";
                duration = 0.2;
                start = "window-raw-opacity-before";
                end = 0;
            };
            blur-opacity = "opacity";
            shadow-opacity = "opacity";

            scale-x = {
                curve = "cubic-bezier(0,1.3,1,1)";
                duration = 0.2;
                start = 1;
                end = 0.6;
            };
            scale-y = "scale-x";

            offset-x = "(1 - scale-x) / 2 * window-width";
            offset-y = "(1 - scale-y) / 2 * window-height";

            shadow-scale-x = "scale-x";
            shadow-scale-y = "scale-y";
            shadow-offset-x = "offset-x";
            shadow-offset-y = "offset-y";
        },

        {
            triggers = ["open"];
            opacity = {
                curve = "cubic-bezier(0,1,1,1)";
                duration = 0.3;
                start = 0;
                end = "window-raw-opacity";
            };
            blur-opacity = "opacity";
            shadow-opacity = "opacity";

            scale-x = {
                curve = "cubic-bezier(0,1.3,1,1)";
                duration = 0.3;
                start = 0.6;
                end = 1;
            };
            scale-y = "scale-x";

            offset-x = "(1 - scale-x) / 2 * window-width";
            offset-y = "(1 - scale-y) / 2 * window-height";

            shadow-scale-x = "scale-x";
            shadow-scale-y = "scale-y";
            shadow-offset-x = "offset-x";
            shadow-offset-y = "offset-y";
        },

        {
            triggers = ["geometry"];
            # When the window is GROWING (open/move/resize)
            scale-x = {
                curve = "cubic-bezier(0,0,0,1.28)";
                duration = 0.5;
                start = "window-width-before / window-width";
                end = 1;
            };

            # When the window is SHRINKING (close/move/resize)
            scale-x-reverse = {
                curve = "cubic-bezier(0,0,0,1.28)";
                duration = 0.1;
                start = "window-width / window-width-before";
                end = 1;
            };

            scale-y = {
                curve = "cubic-bezier(0,0,0,1.28)";
                duration = 0.5;
                start = "window-height-before / window-height";
                end = 1;
            };

            scale-y-reverse = {
                curve = "cubic-bezier(0,0,0,1.28)";
                duration = 0.1;
                start = "window-height / window-height-before";
                end = 1;
            };

            offset-x = {
                curve = "cubic-bezier(0,0,0,1.28)";
                duration = 0.5;
                start = "window-x-before - window-x";
                end = 0;
            };

            offset-y = {
                curve = "cubic-bezier(0,0,0,1.28)";
                duration = 0.5;
                start = "window-y-before - window-y";
                end = 0;
            };


            shadow-scale-x = "scale-x";
            shadow-scale-y = "scale-y";
            shadow-offset-x = "offset-x";
            shadow-offset-y = "offset-y";
        },
        {
          triggers = [ "show" ];
            preset = "appear";
            scale = 0.9;            # Start at 90% size
            duration = 0.15;        # Animate over 0.25 seconds
        },
        {
          triggers = [ "hide" ];
            preset = "disappear";
            scale = 0.9;            # Shrink slightly while fading
            duration = 0.1;
        }
    )

# animations = (
#     {
#         triggers = [ "open" ];
#         preset = "appear";
#         duration = 0.1;
#         scale = 0.3;
#     },
#     {
#         triggers = [ "geometry" ];
#         preset = "geometry-change";
#         duration = 2;
#     },
#     {
#         triggers = [ "close" ];
#         preset = "disappear";
#         duration = 0.1;
#         scale = 0.3;
#     }
# )


shadow = true;
shadow-exclude = [ "name = 'Notification'" , "class_g = 'Conky'" , "class_g ?= 'Notify-osd'" , "class_g = 'Cairo-clock'" , "class_g = 'slop'" , "class_g = 'Polybar'" , "class_g = 'trayer'" , "override_redirect = true" , "_GTK_FRAME_EXTENTS@:c" ];
shadow-offset-x = -3;
shadow-offset-y = -3;
shadow-opacity = 0.300000;
vsync = false;

wintypes: { dnd = { shadow = true; }; dock = { shadow = false; blur = false; }; dropdown_menu = { opacity = 1.000000; }; normal = { fade = false; shadow = true; }; popup_menu = { opacity = 1.000000; }; tooltip = { fade = true; focus = true; full-shadow = false; opacity = 0.750000; shadow = true; }; };
#+end_src
